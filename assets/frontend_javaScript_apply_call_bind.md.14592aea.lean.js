import{_ as n,o as l,c as p,d as s,b as a,a as o}from"./app.a2747a60.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"apply","slug":"apply","link":"#apply","children":[]},{"level":2,"title":"call","slug":"call","link":"#call","children":[]},{"level":2,"title":"bind","slug":"bind","link":"#bind","children":[]}],"relativePath":"frontend/javaScript/apply_call_bind.md"}'),e={name:"frontend/javaScript/apply_call_bind.md"},t=a("h1",null,"apply、call、bind",-1),c=a("br",null,null,-1),r=a("br",null,null,-1),y=a("br",null,null,-1),F=o("",7);function D(A,i,C,d,g,_){return l(),p("div",null,[t,s(" 1.call和apply方法都可以调用函数，第一个参数都可以修改this的指向"),c,s(" 2.call除了第一个参数其他参数都可以实参进行传递给函数"),r,s(" 3. apply方法最多可以传递俩个参数，第二个参数以数组或者伪数组的进行传递数组里的每一项作为实参进行传递"),y,s(" 4. bind 方法不能调用函数，他会创建一个副本函数，并且绑定函数的this指向bind返回新的函数"),F])}const b=n(e,[["render",D]]);export{u as __pageData,b as default};
